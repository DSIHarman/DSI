DSI(Distributed Service Interface) reference implementation

DSI is a message oriented middleware designed for embedded systems in the automotive industry.

Contained files
---------------

 - dsi base library is used by the applications using the DSI
 - servicebroker an interface resolution and lifecycle service executable
 - sbcat utility to retrieve servicebroker status information
 - tests
 - examples


Requirements
------------

 - C++ compiler (g++ >= 4.4)
 - cmake build system
 - for unittests cppunit needs to be installed


Build howto
-----------

For an out-of-source build just dive into the project root directory and call './update.sh' for a debug build. The resulting binaries will be created in the directory './build/debug'.

You may install an necessary libraries and header by calling 'make install'.

Available arguments for the update script update.sh:

   ./update.sh [--release|--debug] <make target>
   
For running tests, type:

   ./update.sh test

When running tests directly on the build tree using 'make test' it is recommended that you tell ctest to add some output in case of failures. This can be done via

   make test ARGS=--output-on-failure
