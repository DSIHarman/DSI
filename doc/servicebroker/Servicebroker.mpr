/* ESG  MSC Editor  Version 3.5.1.1 */
mscdocument Servicebroker;
reference ATTACH_Server_1
reference ATTACH_Server_2
reference Extended_ATTACH_Server
reference ATTACH_No_Server_1
reference ATTACH_No_Server_2
reference Extended_ATTACH_No_Server
reference Colibry_ATTACH_Cache_Hit
reference MoCCA_ATTACH_Cache_Hit
reference Extended_ATTACH_Cache_Hit
reference Colibry_ATTACH_Cache_Fault_Server
reference Colibry_ATTACH_Cache_Fault_No_Server
reference MoCCA_ATTACH_Cache_Fault_Server
reference MoCCA_ATTACH_Cache_Fault_No_Server
reference Extended_ATTACH_Cache_Fault_No_Server
reference Extended_ATTACH_Cache_Fault_Server_1
reference Extended_ATTACH_Cache_Fault_Server_2
utilities

msc ATTACH_Server_1 comment 'The server is available before the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.SBSetServerAvailableNotification,2 to SB_Slave;
SB_Slave: label L3; in USERDEF.SBSetServerAvailableNotification,2 from Client;
SB_Slave: label L4; out USERDEF.Result_SBSetServerAvailableNotification,3(NotificationID='100') to Client;
Client: label L5; in USERDEF.Result_SBSetServerAvailableNotification,3(NotificationID='100') from SB_Slave;
SB_Slave: label L6; out USERDEF.SBSetServerAvailableNotification,4 to SB_Master;
SB_Master: label L7; in USERDEF.SBSetServerAvailableNotification,4 from SB_Slave;
SB_Master: label L8; out USERDEF.Result_SBSetServerAvailableNotification,5(NotificationID='200') to SB_Slave;
SB_Slave: label L9; in USERDEF.Result_SBSetServerAvailableNotification,5(NotificationID='200') from SB_Master;
SB_Master: label L10; out USERDEF.write,6(pulse.value='200', pulse.code='PULSE_SERVER_AVAILABLE') to SB_Slave;
SB_Slave: label L11; in USERDEF.write,6(pulse.value='200', pulse.code='PULSE_SERVER_AVAILABLE') from SB_Master;
SB_Slave: label L12; out USERDEF.write,7(pulse.value='100', pulse.code='PULSE_SERVER_AVAILABLE') to Client;
Client: label L13; in USERDEF.write,7(pulse.value='100', pulse.code='PULSE_SERVER_AVAILABLE') from SB_Slave;
Client: label L14; out USERDEF.SBAttachInterface,8(Name=_) to SB_Slave;
SB_Slave: label L15; in USERDEF.SBAttachInterface,8(Name=_) from Client;
SB_Slave: label L16; out USERDEF.SBAttachInterface,9(Name=_) to SB_Master;
SB_Master: label L17; in USERDEF.SBAttachInterface,9(Name=_) from SB_Slave;
SB_Master: label L18; out USERDEF.Result_SBAttachInterface,10(SConnectionInfo=_) to SB_Slave;
SB_Slave: label L19; in USERDEF.Result_SBAttachInterface,10(SConnectionInfo=_) from SB_Master;
SB_Slave: label L20; out USERDEF.Result_SBAttachInterface,11(SConnectionInfo=_) to Client;
Client: label L21; in USERDEF.Result_SBAttachInterface,11(SConnectionInfo=_) from SB_Slave;
Client: label L22; out USERDEF.DSIConnectRequest,12(SConnectionInfo=_) to Server;
Server: label L23; in USERDEF.DSIConnectRequest,12(SConnectionInfo=_) from Client;
Client: label L24; out USERDEF.SBSetServerDisconnectNotification,13 to SB_Slave;
SB_Slave: label L25; in USERDEF.SBSetServerDisconnectNotification,13 from Client;
SB_Slave: label L26; out USERDEF.Result_SBSetServerDisconnectNotification,14(NotificationID='101') to Client;
Client: label L27; in USERDEF.Result_SBSetServerDisconnectNotification,14(NotificationID='101') from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L28; out USERDEF.SBSetServerDisconnectNotification,15 to SB_Master;
SB_Master: label L29; in USERDEF.SBSetServerDisconnectNotification,15 from SB_Slave;
SB_Master: label L30; out USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID='201') to SB_Slave;
SB_Slave: label L31; in USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID='201') from SB_Master;
Server: label L32; out USERDEF.SBSetClientDetachNotification,17 to SB_Master;
SB_Master: label L33; in USERDEF.SBSetClientDetachNotification,17 from Server;
SB_Master: label L34; out USERDEF.Result_SBSetClientDetachNotification,18(NotificationID='202') to Server;
Server: label L35; in USERDEF.Result_SBSetClientDetachNotification,18(NotificationID='202') from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc ATTACH_Server_2 comment 'The server is available before the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.SBAttachInterface,2(Name=_) to SB_Slave;
SB_Slave: label L3; in USERDEF.SBAttachInterface,2(Name=_) from Client;
SB_Slave: label L4; out USERDEF.SBAttachInterface,3(Name=_) to SB_Master;
SB_Master: label L5; in USERDEF.SBAttachInterface,3(Name=_) from SB_Slave;
SB_Master: label L6; out USERDEF.Result_SBAttachInterface,4(SConnectionInfo=_) to SB_Slave;
SB_Slave: label L7; in USERDEF.Result_SBAttachInterface,4(SConnectionInfo=_) from SB_Master;
SB_Slave: label L8; out USERDEF.Result_SBAttachInterface,5(SConnectionInfo=_) to Client;
Client: label L9; in USERDEF.Result_SBAttachInterface,5(SConnectionInfo=_) from SB_Slave;
Client: label L10; out USERDEF.DSIConnectRequest,6(SConnectionInfo=_) to Server;
Server: label L11; in USERDEF.DSIConnectRequest,6(SConnectionInfo=_) from Client;
Client: label L12; out USERDEF.SBSetServerDisconnectNotification,7 to SB_Slave;
SB_Slave: label L13; in USERDEF.SBSetServerDisconnectNotification,7 from Client;
SB_Slave: label L14; out USERDEF.Result_SBSetServerDisconnectNotification,8(NotificationID='100') to Client;
Client: label L15; in USERDEF.Result_SBSetServerDisconnectNotification,8(NotificationID='100') from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L16; out USERDEF.SBSetServerDisconnectNotification,9 to SB_Master;
SB_Master: label L17; in USERDEF.SBSetServerDisconnectNotification,9 from SB_Slave;
SB_Master: label L18; out USERDEF.Result_SBSetServerDisconnectNotification,10(NotificationID='200') to SB_Slave;
SB_Slave: label L19; in USERDEF.Result_SBSetServerDisconnectNotification,10(NotificationID='200') from SB_Master;
Server: label L20; out USERDEF.SBSetClientDetachNotification,11 to SB_Master;
SB_Master: label L21; in USERDEF.SBSetClientDetachNotification,11 from Server;
SB_Master: label L22; out USERDEF.Result_SBSetClientDetachNotification,12(NotificationID='201') to Server;
Server: label L23; in USERDEF.Result_SBSetClientDetachNotification,12(NotificationID='201') from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Extended_ATTACH_Server comment 'The server is available before the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.attachExtendedInterface,2(Name=_) to SB_Slave;
SB_Slave: label L3; in USERDEF.attachExtendedInterface,2(Name=_) from Client;
SB_Slave: label L4; out USERDEF.attachExtendedInterface,3(Name=_) to SB_Master;
SB_Master: label L5; in USERDEF.attachExtendedInterface,3(Name=_) from SB_Slave;
text 'Create disconnect notification with ID=200'/* Alignment: Center */ /* refers to: SB_Master*/;
SB_Master: label L6; out USERDEF.Result_attachExtendedInterface,4(SConnectionInfo=_, NotificationID='200') to SB_Slave;
SB_Slave: label L7; in USERDEF.Result_attachExtendedInterface,4(SConnectionInfo=_, NotificationID='200') from SB_Master;
text 'Create disconnect notification with ID=100'/* Alignment: Center */ /* refers to: SB_Slave*/;
SB_Slave: label L8; out USERDEF.Result_attachExtendedInterface,5(SConnectionInfo=_, NotificationID='100') to Client;
Client: label L9; in USERDEF.Result_attachExtendedInterface,5(SConnectionInfo=_, NotificationID='100') from SB_Slave;
Client: label L10; out USERDEF.DSIConnectRequest,6(SConnectionInfo=_) to Server;
Server: label L11; in USERDEF.DSIConnectRequest,6(SConnectionInfo=_) from Client;
Server: label L12; out USERDEF.SBSetClientDetachNotification,7 to SB_Master;
SB_Master: label L13; in USERDEF.SBSetClientDetachNotification,7 from Server;
SB_Master: label L14; out USERDEF.Result_SBSetClientDetachNotification,8(NotificationID='201') to Server;
Server: label L15; in USERDEF.Result_SBSetClientDetachNotification,8(NotificationID='201') from SB_Master;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc ATTACH_No_Server_1 comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Client: label L0; out USERDEF.SBSetServerAvailableNotification,1 to SB_Slave;
SB_Slave: label L1; in USERDEF.SBSetServerAvailableNotification,1 from Client;
SB_Slave: label L2; out USERDEF.Result_SBSetServerAvailableNotification,2(NotificationID='100') to Client;
Client: label L3; in USERDEF.Result_SBSetServerAvailableNotification,2(NotificationID='100') from SB_Slave;
SB_Slave: label L4; out USERDEF.SBSetServerAvailableNotification,3 to SB_Master;
SB_Master: label L5; in USERDEF.SBSetServerAvailableNotification,3 from SB_Slave;
SB_Master: label L6; out USERDEF.Result_SBSetServerAvailableNotification,4(NotificationID='200') to SB_Slave;
SB_Slave: label L7; in USERDEF.Result_SBSetServerAvailableNotification,4(NotificationID='200') from SB_Master;
Server: label L8; out USERDEF.SBRegisterInterface,5(Name=_) to SB_Master;
SB_Master: label L9; in USERDEF.SBRegisterInterface,5(Name=_) from Server;
SB_Master: label L10; out USERDEF.write,6(pulse.value='200', pulse.code='PULSE_SERVER_AVAILABLE') to SB_Slave;
SB_Slave: label L11; in USERDEF.write,6(pulse.value='200', pulse.code='PULSE_SERVER_AVAILABLE') from SB_Master;
SB_Slave: label L12; out USERDEF.write,7(pulse.value='100', pulse.code='PULSE_SERVER_AVAILABLE') to Client;
Client: label L13; in USERDEF.write,7(pulse.value='100', pulse.code='PULSE_SERVER_AVAILABLE') from SB_Slave;
Client: label L14; out USERDEF.SBAttachInterface,8(Name=_) to SB_Slave;
SB_Slave: label L15; in USERDEF.SBAttachInterface,8(Name=_) from Client;
SB_Slave: label L16; out USERDEF.SBAttachInterface,9(Name=_) to SB_Master;
SB_Master: label L17; in USERDEF.SBAttachInterface,9(Name=_) from SB_Slave;
SB_Master: label L18; out USERDEF.Result_SBAttachInterface,10(SConnectionInfo=_) to SB_Slave;
SB_Slave: label L19; in USERDEF.Result_SBAttachInterface,10(SConnectionInfo=_) from SB_Master;
SB_Slave: label L20; out USERDEF.Result_SBAttachInterface,11(SConnectionInfo=_) to Client;
Client: label L21; in USERDEF.Result_SBAttachInterface,11(SConnectionInfo=_) from SB_Slave;
Client: label L22; out USERDEF.DSIConnectRequest,12(SConnectionInfo=_) to Server;
Server: label L23; in USERDEF.DSIConnectRequest,12(SConnectionInfo=_) from Client;
Client: label L24; out USERDEF.SBSetServerDisconnectNotification,13 to SB_Slave;
SB_Slave: label L25; in USERDEF.SBSetServerDisconnectNotification,13 from Client;
SB_Slave: label L26; out USERDEF.Result_SBSetServerDisconnectNotification,14(NotificationID='101') to Client;
Client: label L27; in USERDEF.Result_SBSetServerDisconnectNotification,14(NotificationID='101') from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L28; out USERDEF.SBSetServerDisconnectNotification,15 to SB_Master;
SB_Master: label L29; in USERDEF.SBSetServerDisconnectNotification,15 from SB_Slave;
SB_Master: label L30; out USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID='201') to SB_Slave;
SB_Slave: label L31; in USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID='201') from SB_Master;
Server: label L32; out USERDEF.SBSetClientDetachNotification,17 to SB_Master;
SB_Master: label L33; in USERDEF.SBSetClientDetachNotification,17 from Server;
SB_Master: label L34; out USERDEF.Result_SBSetClientDetachNotification,18(NotificationID='202') to Server;
Server: label L35; in USERDEF.Result_SBSetClientDetachNotification,18(NotificationID='202') from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc ATTACH_No_Server_2 comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Client: label L0; out USERDEF.SBAttachInterface,1(Name=_) to SB_Slave;
SB_Slave: label L1; in USERDEF.SBAttachInterface,1(Name=_) from Client;
SB_Slave: label L2; out USERDEF.SBAttachInterface,2(Name=_) to SB_Master;
SB_Master: label L3; in USERDEF.SBAttachInterface,2(Name=_) from SB_Slave;
SB_Master: label L4; out USERDEF.Result_SBAttachInterface,3(ret='FNDUnknownInterface') to SB_Slave;
SB_Slave: label L5; in USERDEF.Result_SBAttachInterface,3(ret='FNDUnknownInterface') from SB_Master;
SB_Slave: label L6; out USERDEF.Result_SBAttachInterface,4(ret='FNDUnknownInterface') to Client;
Client: label L7; in USERDEF.Result_SBAttachInterface,4(ret='FNDUnknownInterface') from SB_Slave;
Client: label L8; out USERDEF.SBSetServerAvailableNotification,5 to SB_Slave;
SB_Slave: label L9; in USERDEF.SBSetServerAvailableNotification,5 from Client;
SB_Slave: label L10; out USERDEF.Result_SBSetServerAvailableNotification,6(NotificationID='100') to Client;
Client: label L11; in USERDEF.Result_SBSetServerAvailableNotification,6(NotificationID='100') from SB_Slave;
SB_Slave: label L12; out USERDEF.SBSetServerAvailableNotification,7 to SB_Master;
SB_Master: label L13; in USERDEF.SBSetServerAvailableNotification,7 from SB_Slave;
SB_Master: label L14; out USERDEF.Result_SBSetServerAvailableNotification,8(NotificationID='200') to SB_Slave;
SB_Slave: label L15; in USERDEF.Result_SBSetServerAvailableNotification,8(NotificationID='200') from SB_Master;
Server: label L16; out USERDEF.SBRegisterInterface,9(Name=_) to SB_Master;
SB_Master: label L17; in USERDEF.SBRegisterInterface,9(Name=_) from Server;
SB_Master: label L18; out USERDEF.write,10(pulse.value='200', pulse.code='PULSE_SERVER_AVAILABLE') to SB_Slave;
SB_Slave: label L19; in USERDEF.write,10(pulse.value='200', pulse.code='PULSE_SERVER_AVAILABLE') from SB_Master;
SB_Slave: label L20; out USERDEF.write,11(pulse.value='100', pulse.code='PULSE_SERVER_AVAILABLE') to Client;
Client: label L21; in USERDEF.write,11(pulse.value='100', pulse.code='PULSE_SERVER_AVAILABLE') from SB_Slave;
Client: label L22; out USERDEF.SBAttachInterface,12(Name=_) to SB_Slave;
SB_Slave: label L23; in USERDEF.SBAttachInterface,12(Name=_) from Client;
SB_Slave: label L24; out USERDEF.SBAttachInterface,13(Name=_) to SB_Master;
SB_Master: label L25; in USERDEF.SBAttachInterface,13(Name=_) from SB_Slave;
SB_Master: label L26; out USERDEF.Result_SBAttachInterface,14(SConnectionInfo=_) to SB_Slave;
SB_Slave: label L27; in USERDEF.Result_SBAttachInterface,14(SConnectionInfo=_) from SB_Master;
SB_Slave: label L28; out USERDEF.Result_SBAttachInterface,15(SConnectionInfo=_) to Client;
Client: label L29; in USERDEF.Result_SBAttachInterface,15(SConnectionInfo=_) from SB_Slave;
Client: label L30; out USERDEF.DSIConnectRequest,16(SConnectionInfo=_) to Server;
Server: label L31; in USERDEF.DSIConnectRequest,16(SConnectionInfo=_) from Client;
Client: label L32; out USERDEF.SBSetServerDisconnectNotification,17 to SB_Slave;
SB_Slave: label L33; in USERDEF.SBSetServerDisconnectNotification,17 from Client;
SB_Slave: label L34; out USERDEF.Result_SBSetServerDisconnectNotification,18(NotificationID='101') to Client;
Client: label L35; in USERDEF.Result_SBSetServerDisconnectNotification,18(NotificationID='101') from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L36; out USERDEF.SBSetServerDisconnectNotification,19 to SB_Master;
SB_Master: label L37; in USERDEF.SBSetServerDisconnectNotification,19 from SB_Slave;
SB_Master: label L38; out USERDEF.Result_SBSetServerDisconnectNotification,20(NotificationID='201') to SB_Slave;
SB_Slave: label L39; in USERDEF.Result_SBSetServerDisconnectNotification,20(NotificationID='201') from SB_Master;
Server: label L40; out USERDEF.SBSetClientDetachNotification,21 to SB_Master;
SB_Master: label L41; in USERDEF.SBSetClientDetachNotification,21 from Server;
SB_Master: label L42; out USERDEF.Result_SBSetClientDetachNotification,22(NotificationID='202') to Server;
Server: label L43; in USERDEF.Result_SBSetClientDetachNotification,22(NotificationID='202') from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Extended_ATTACH_No_Server comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Center */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Client: label L0; out USERDEF.attachExtendedInterface,1(Name=_) to SB_Slave;
SB_Slave: label L1; in USERDEF.attachExtendedInterface,1(Name=_) from Client;
SB_Slave: label L2; out USERDEF.attachExtendedInterface,2(Name=_) to SB_Master;
SB_Master: label L3; in USERDEF.attachExtendedInterface,2(Name=_) from SB_Slave;
text 'Create server available notification with ID=200'/* Alignment: Center */ /* refers to: SB_Master*/;
SB_Master: label L4; out USERDEF.Result_attachExtendedInterface,3(ret='FNDUnknownInterface', NotificationID='200') to SB_Slave;
SB_Slave: label L5; in USERDEF.Result_attachExtendedInterface,3(ret='FNDUnknownInterface', NotificationID='200') from SB_Master;
text 'Create server available notification with ID=100'/* Alignment: Center */ /* refers to: SB_Slave*/;
SB_Slave: label L6; out USERDEF.Result_attachExtendedInterface,4(ret='FNDUnknownInterface', NotificationID='100') to Client;
Client: label L7; in USERDEF.Result_attachExtendedInterface,4(ret='FNDUnknownInterface', NotificationID='100') from SB_Slave;
Server: label L8; out USERDEF.SBRegisterInterface,5(Name=_) to SB_Master;
SB_Master: label L9; in USERDEF.SBRegisterInterface,5(Name=_) from Server;
SB_Master: label L10; out USERDEF.write,6(pulse.value='200', pulse.code='PULSE_SERVER_AVAILABLE') to SB_Slave;
SB_Slave: label L11; in USERDEF.write,6(pulse.value='200', pulse.code='PULSE_SERVER_AVAILABLE') from SB_Master;
SB_Slave: label L12; out USERDEF.write,7(pulse.value='100', pulse.code='PULSE_SERVER_AVAILABLE') to Client;
Client: label L13; in USERDEF.write,7(pulse.value='100', pulse.code='PULSE_SERVER_AVAILABLE') from SB_Slave;
Client: label L14; out USERDEF.attachExtendedInterface,8(Name=_) to SB_Slave;
SB_Slave: label L15; in USERDEF.attachExtendedInterface,8(Name=_) from Client;
SB_Slave: label L16; out USERDEF.attachExtendedInterface,9(Name=_) to SB_Master;
SB_Master: label L17; in USERDEF.attachExtendedInterface,9(Name=_) from SB_Slave;
text 'Create disconnect notification with ID=201'/* Alignment: Center */ /* refers to: SB_Master*/;
SB_Master: label L18; out USERDEF.Result_attachExtendedInterface,10(SConnectionInfo=_, NotificationID='201') to SB_Slave;
SB_Slave: label L19; in USERDEF.Result_attachExtendedInterface,10(SConnectionInfo=_, NotificationID='201') from SB_Master;
text 'Create disconnect notification with ID=101'/* Alignment: Center */ /* refers to: SB_Slave*/;
SB_Slave: label L20; out USERDEF.Result_attachExtendedInterface,11(SConnectionInfo=_, NotificationID='101') to Client;
Client: label L21; in USERDEF.Result_attachExtendedInterface,11(SConnectionInfo=_, NotificationID='101') from SB_Slave;
Client: label L22; out USERDEF.DSIConnectRequest,12(SConnectionInfo=_) to Server;
Server: label L23; in USERDEF.DSIConnectRequest,12(SConnectionInfo=_) from Client;
Server: label L24; out USERDEF.SBSetClientDetachNotification,13 to SB_Master;
SB_Master: label L25; in USERDEF.SBSetClientDetachNotification,13 from Server;
SB_Master: label L26; out USERDEF.Result_SBSetClientDetachNotification,14(NotificationID='202') to Server;
Server: label L27; in USERDEF.Result_SBSetClientDetachNotification,14(NotificationID='202') from SB_Master;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Colibry_ATTACH_Cache_Hit comment 'The server is available before the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.SBSetServerAvailableNotification,2 to SB_Slave;
SB_Slave: label L3; in USERDEF.SBSetServerAvailableNotification,2 from Client;
SB_Slave: label L4; out USERDEF.Result_SBSetServerAvailableNotification,3(NotificationID=_) to Client;
Client: label L5; in USERDEF.Result_SBSetServerAvailableNotification,3(NotificationID=_) from SB_Slave;
SB_Slave: label L6; out USERDEF.write,4(NotificationID=_) to Client;
Client: label L7; in USERDEF.write,4(NotificationID=_) from SB_Slave;
Client: label L8; out USERDEF.SBAttachInterface,5(Name=_) to SB_Slave;
SB_Slave: label L9; in USERDEF.SBAttachInterface,5(Name=_) from Client;
SB_Slave: label L10; out USERDEF.Result_SBAttachInterface,6(SConnectionInfo=_) to Client;
Client: label L11; in USERDEF.Result_SBAttachInterface,6(SConnectionInfo=_) from SB_Slave;
Client: label L12; out USERDEF.DSIConnectRequest,7(SConnectionInfo=_) to Server;
Server: label L13; in USERDEF.DSIConnectRequest,7(SConnectionInfo=_) from Client;
Client: label L14; out USERDEF.SBSetServerDisconnectNotification,8 to SB_Slave;
SB_Slave: label L15; in USERDEF.SBSetServerDisconnectNotification,8 from Client;
SB_Slave: label L16; out USERDEF.Result_SBSetServerDisconnectNotification,9(NotificationID=_) to Client;
Client: label L17; in USERDEF.Result_SBSetServerDisconnectNotification,9(NotificationID=_) from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L18; out USERDEF.SBSetServerDisconnectNotification,10 to SB_Master;
SB_Master: label L19; in USERDEF.SBSetServerDisconnectNotification,10 from SB_Slave;
SB_Master: label L20; out USERDEF.Result_SBSetServerDisconnectNotification,11(NotificationID=_) to SB_Slave;
SB_Slave: label L21; in USERDEF.Result_SBSetServerDisconnectNotification,11(NotificationID=_) from SB_Master;
Server: label L22; out USERDEF.SBSetClientDetachNotification,12 to SB_Master;
SB_Master: label L23; in USERDEF.SBSetClientDetachNotification,12 from Server;
SB_Master: label L24; out USERDEF.Result_SBSetClientDetachNotification,13(NotificationID=_) to Server;
Server: label L25; in USERDEF.Result_SBSetClientDetachNotification,13(NotificationID=_) from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc MoCCA_ATTACH_Cache_Hit comment 'The server is available before the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.SBAttachInterface,2(Name=_) to SB_Slave;
SB_Slave: label L3; in USERDEF.SBAttachInterface,2(Name=_) from Client;
SB_Slave: label L4; out USERDEF.Result_SBAttachInterface,3(SConnectionInfo=_) to Client;
Client: label L5; in USERDEF.Result_SBAttachInterface,3(SConnectionInfo=_) from SB_Slave;
Client: label L6; out USERDEF.DSIConnectRequest,4(SConnectionInfo=_) to Server;
Server: label L7; in USERDEF.DSIConnectRequest,4(SConnectionInfo=_) from Client;
Client: label L8; out USERDEF.SBSetServerDisconnectNotification,5 to SB_Slave;
SB_Slave: label L9; in USERDEF.SBSetServerDisconnectNotification,5 from Client;
SB_Slave: label L10; out USERDEF.Result_SBSetServerDisconnectNotification,6(NotificationID=_) to Client;
Client: label L11; in USERDEF.Result_SBSetServerDisconnectNotification,6(NotificationID=_) from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L12; out USERDEF.SBSetServerDisconnectNotification,7 to SB_Master;
SB_Master: label L13; in USERDEF.SBSetServerDisconnectNotification,7 from SB_Slave;
SB_Master: label L14; out USERDEF.Result_SBSetServerDisconnectNotification,8(NotificationID=_) to SB_Slave;
SB_Slave: label L15; in USERDEF.Result_SBSetServerDisconnectNotification,8(NotificationID=_) from SB_Master;
Server: label L16; out USERDEF.SBSetClientDetachNotification,9 to SB_Master;
SB_Master: label L17; in USERDEF.SBSetClientDetachNotification,9 from Server;
SB_Master: label L18; out USERDEF.Result_SBSetClientDetachNotification,10(NotificationID=_) to Server;
Server: label L19; in USERDEF.Result_SBSetClientDetachNotification,10(NotificationID=_) from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Extended_ATTACH_Cache_Hit comment 'The server is available before the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.attachExtendedInterface,2(Name=_, from_SB='false') to SB_Slave;
SB_Slave: label L3; in USERDEF.attachExtendedInterface,2(Name=_, from_SB='false') from Client;
SB_Slave: label L4; out USERDEF.Result_attachExtendedInterface,3(SConnectionInfo=_, NotificationID=_) to Client;
Client: label L5; in USERDEF.Result_attachExtendedInterface,3(SConnectionInfo=_, NotificationID=_) from SB_Slave;
Client: label L6; out USERDEF.DSIConnectRequest,4(SConnectionInfo=_) to Server;
Server: label L7; in USERDEF.DSIConnectRequest,4(SConnectionInfo=_) from Client;
Server: label L8; out USERDEF.SBSetClientDetachNotification,5 to SB_Master;
SB_Master: label L9; in USERDEF.SBSetClientDetachNotification,5 from Server;
SB_Master: label L10; out USERDEF.Result_SBSetClientDetachNotification,6(NotificationID=_) to Server;
Server: label L11; in USERDEF.Result_SBSetClientDetachNotification,6(NotificationID=_) from SB_Master;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Colibry_ATTACH_Cache_Fault_Server comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.SBSetServerAvailableNotification,2 to SB_Slave;
SB_Slave: label L3; in USERDEF.SBSetServerAvailableNotification,2 from Client;
SB_Slave: label L4; out USERDEF.Result_SBSetServerAvailableNotification,3(NotificationID='ID_1') to Client;
Client: label L5; in USERDEF.Result_SBSetServerAvailableNotification,3(NotificationID='ID_1') from SB_Slave;
SB_Slave: label L6; out USERDEF.SBSetServerAvailableNotification,4 to SB_Master;
SB_Master: label L7; in USERDEF.SBSetServerAvailableNotification,4 from SB_Slave;
SB_Master: label L8; out USERDEF.Result_SBSetServerAvailableNotification,5(NotificationID=_) to SB_Slave;
SB_Slave: label L9; in USERDEF.Result_SBSetServerAvailableNotification,5(NotificationID=_) from SB_Master;
SB_Master: label L10; out USERDEF.write,6(NotificationID=_) to SB_Slave;
SB_Slave: label L11; in USERDEF.write,6(NotificationID=_) from SB_Master;
SB_Slave: label L12; out USERDEF.getServerInformation,7 to SB_Master;
SB_Master: label L13; in USERDEF.getServerInformation,7 from SB_Slave;
SB_Master: label L14; out USERDEF.Result_getServerInformation,8 to SB_Slave;
SB_Slave: label L15; in USERDEF.Result_getServerInformation,8 from SB_Master;
SB_Slave: label L16; out USERDEF.write,9(NotificationID='ID_1') to Client;
Client: label L17; in USERDEF.write,9(NotificationID='ID_1') from SB_Slave;
Client: label L18; out USERDEF.SBAttachInterface,10(Name=_) to SB_Slave;
SB_Slave: label L19; in USERDEF.SBAttachInterface,10(Name=_) from Client;
SB_Slave: label L20; out USERDEF.Result_SBAttachInterface,11(SConnectionInfo=_) to Client;
Client: label L21; in USERDEF.Result_SBAttachInterface,11(SConnectionInfo=_) from SB_Slave;
Client: label L22; out USERDEF.DSIConnectRequest,12(SConnectionInfo=_) to Server;
Server: label L23; in USERDEF.DSIConnectRequest,12(SConnectionInfo=_) from Client;
Client: label L24; out USERDEF.SBSetServerDisconnectNotification,13 to SB_Slave;
SB_Slave: label L25; in USERDEF.SBSetServerDisconnectNotification,13 from Client;
SB_Slave: label L26; out USERDEF.Result_SBSetServerDisconnectNotification,14(NotificationID='ID_2') to Client;
Client: label L27; in USERDEF.Result_SBSetServerDisconnectNotification,14(NotificationID='ID_2') from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L28; out USERDEF.SBSetServerDisconnectNotification,15 to SB_Master;
SB_Master: label L29; in USERDEF.SBSetServerDisconnectNotification,15 from SB_Slave;
SB_Master: label L30; out USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID=_) to SB_Slave;
SB_Slave: label L31; in USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID=_) from SB_Master;
Server: label L32; out USERDEF.SBSetClientDetachNotification,17 to SB_Master;
SB_Master: label L33; in USERDEF.SBSetClientDetachNotification,17 from Server;
SB_Master: label L34; out USERDEF.Result_SBSetClientDetachNotification,18(NotificationID=_) to Server;
Server: label L35; in USERDEF.Result_SBSetClientDetachNotification,18(NotificationID=_) from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Colibry_ATTACH_Cache_Fault_No_Server comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Client: label L0; out USERDEF.SBSetServerAvailableNotification,1 to SB_Slave;
SB_Slave: label L1; in USERDEF.SBSetServerAvailableNotification,1 from Client;
SB_Slave: label L2; out USERDEF.Result_SBSetServerAvailableNotification,2(NotificationID='ID_1') to Client;
Client: label L3; in USERDEF.Result_SBSetServerAvailableNotification,2(NotificationID='ID_1') from SB_Slave;
SB_Slave: label L4; out USERDEF.SBSetServerAvailableNotification,3 to SB_Master;
SB_Master: label L5; in USERDEF.SBSetServerAvailableNotification,3 from SB_Slave;
SB_Master: label L6; out USERDEF.Result_SBSetServerAvailableNotification,4(NotificationID=_) to SB_Slave;
SB_Slave: label L7; in USERDEF.Result_SBSetServerAvailableNotification,4(NotificationID=_) from SB_Master;
Server: label L8; out USERDEF.SBRegisterInterface,5(Name=_) to SB_Master;
SB_Master: label L9; in USERDEF.SBRegisterInterface,5(Name=_) from Server;
SB_Master: label L10; out USERDEF.write,6(NotificationID=_) to SB_Slave;
SB_Slave: label L11; in USERDEF.write,6(NotificationID=_) from SB_Master;
SB_Slave: label L12; out USERDEF.getServerInformation,7 to SB_Master;
SB_Master: label L13; in USERDEF.getServerInformation,7 from SB_Slave;
SB_Master: label L14; out USERDEF.Result_getServerInformation,8 to SB_Slave;
SB_Slave: label L15; in USERDEF.Result_getServerInformation,8 from SB_Master;
SB_Slave: label L16; out USERDEF.write,9(NotificationID='ID_1') to Client;
Client: label L17; in USERDEF.write,9(NotificationID='ID_1') from SB_Slave;
Client: label L18; out USERDEF.SBAttachInterface,10(Name=_) to SB_Slave;
SB_Slave: label L19; in USERDEF.SBAttachInterface,10(Name=_) from Client;
SB_Slave: label L20; out USERDEF.Result_SBAttachInterface,11(SConnectionInfo=_) to Client;
Client: label L21; in USERDEF.Result_SBAttachInterface,11(SConnectionInfo=_) from SB_Slave;
Client: label L22; out USERDEF.DSIConnectRequest,12(SConnectionInfo=_) to Server;
Server: label L23; in USERDEF.DSIConnectRequest,12(SConnectionInfo=_) from Client;
Client: label L24; out USERDEF.SBSetServerDisconnectNotification,13 to SB_Slave;
SB_Slave: label L25; in USERDEF.SBSetServerDisconnectNotification,13 from Client;
SB_Slave: label L26; out USERDEF.Result_SBSetServerDisconnectNotification,14(NotificationID='ID_2') to Client;
Client: label L27; in USERDEF.Result_SBSetServerDisconnectNotification,14(NotificationID='ID_2') from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L28; out USERDEF.SBSetServerDisconnectNotification,15 to SB_Master;
SB_Master: label L29; in USERDEF.SBSetServerDisconnectNotification,15 from SB_Slave;
SB_Master: label L30; out USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID=_) to SB_Slave;
SB_Slave: label L31; in USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID=_) from SB_Master;
Server: label L32; out USERDEF.SBSetClientDetachNotification,17 to SB_Master;
SB_Master: label L33; in USERDEF.SBSetClientDetachNotification,17 from Server;
SB_Master: label L34; out USERDEF.Result_SBSetClientDetachNotification,18(NotificationID=_) to Server;
Server: label L35; in USERDEF.Result_SBSetClientDetachNotification,18(NotificationID=_) from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc MoCCA_ATTACH_Cache_Fault_Server comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.SBAttachInterface,2(Name=_) to SB_Slave;
SB_Slave: label L3; in USERDEF.SBAttachInterface,2(Name=_) from Client;
SB_Slave: label L4; out USERDEF.Result_SBAttachInterface,3(Error=_) to Client;
Client: label L5; in USERDEF.Result_SBAttachInterface,3(Error=_) from SB_Slave;
SB_Slave: concurrent;
SB_Slave: label L6; out USERDEF.SBSetServerAvailableNotification,4 to SB_Master;
SB_Master: label L7; in USERDEF.SBSetServerAvailableNotification,4 from SB_Slave;
SB_Master: label L8; out USERDEF.Result_SBSetServerAvailableNotification,5(NotificationID=_) to SB_Slave;
SB_Slave: label L9; in USERDEF.Result_SBSetServerAvailableNotification,5(NotificationID=_) from SB_Master;
SB_Master: label L10; out USERDEF.write,6(NotificationID=_) to SB_Slave;
SB_Slave: label L11; in USERDEF.write,6(NotificationID=_) from SB_Master;
Client: label L12; out USERDEF.SBSetServerAvailableNotification,7 to SB_Slave;
SB_Slave: label L13; in USERDEF.SBSetServerAvailableNotification,7 from Client;
SB_Slave: label L14; out USERDEF.Result_SBSetServerAvailableNotification,8(NotificationID='ID_1') to Client;
Client: label L15; in USERDEF.Result_SBSetServerAvailableNotification,8(NotificationID='ID_1') from SB_Slave;
SB_Slave: label L16; out USERDEF.getServerInformation,9 to SB_Master;
SB_Master: label L17; in USERDEF.getServerInformation,9 from SB_Slave;
SB_Master: label L18; out USERDEF.Result_getServerInformation,10 to SB_Slave;
SB_Slave: label L19; in USERDEF.Result_getServerInformation,10 from SB_Master;
SB_Slave: endconcurrent;
SB_Slave: label L20; out USERDEF.write,11(NotificationID='ID_1') to Client;
Client: label L21; in USERDEF.write,11(NotificationID='ID_1') from SB_Slave;
Client: label L22; out USERDEF.SBAttachInterface,12(Name=_) to SB_Slave;
SB_Slave: label L23; in USERDEF.SBAttachInterface,12(Name=_) from Client;
SB_Slave: label L24; out USERDEF.Result_SBAttachInterface,13(SConnectionInfo=_) to Client;
Client: label L25; in USERDEF.Result_SBAttachInterface,13(SConnectionInfo=_) from SB_Slave;
Client: label L26; out USERDEF.DSIConnectRequest,14(SConnectionInfo=_) to Server;
Server: label L27; in USERDEF.DSIConnectRequest,14(SConnectionInfo=_) from Client;
Client: label L28; out USERDEF.SBSetServerDisconnectNotification,15 to SB_Slave;
SB_Slave: label L29; in USERDEF.SBSetServerDisconnectNotification,15 from Client;
SB_Slave: label L30; out USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID='ID_2') to Client;
Client: label L31; in USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID='ID_2') from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L32; out USERDEF.SBSetServerDisconnectNotification,17 to SB_Master;
SB_Master: label L33; in USERDEF.SBSetServerDisconnectNotification,17 from SB_Slave;
SB_Master: label L34; out USERDEF.Result_SBSetServerDisconnectNotification,18(NotificationID=_) to SB_Slave;
SB_Slave: label L35; in USERDEF.Result_SBSetServerDisconnectNotification,18(NotificationID=_) from SB_Master;
Server: label L36; out USERDEF.SBSetClientDetachNotification,19 to SB_Master;
SB_Master: label L37; in USERDEF.SBSetClientDetachNotification,19 from Server;
SB_Master: label L38; out USERDEF.Result_SBSetClientDetachNotification,20(NotificationID=_) to Server;
Server: label L39; in USERDEF.Result_SBSetClientDetachNotification,20(NotificationID=_) from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc MoCCA_ATTACH_Cache_Fault_No_Server comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Client: label L0; out USERDEF.SBAttachInterface,1(Name=_) to SB_Slave;
SB_Slave: label L1; in USERDEF.SBAttachInterface,1(Name=_) from Client;
SB_Slave: label L2; out USERDEF.Result_SBAttachInterface,2(Error=_) to Client;
Client: label L3; in USERDEF.Result_SBAttachInterface,2(Error=_) from SB_Slave;
SB_Slave: concurrent;
SB_Slave: label L4; out USERDEF.SBSetServerAvailableNotification,3 to SB_Master;
SB_Master: label L5; in USERDEF.SBSetServerAvailableNotification,3 from SB_Slave;
SB_Master: label L6; out USERDEF.Result_SBSetServerAvailableNotification,4(NotificationID=_) to SB_Slave;
SB_Slave: label L7; in USERDEF.Result_SBSetServerAvailableNotification,4(NotificationID=_) from SB_Master;
Client: label L8; out USERDEF.SBSetServerAvailableNotification,5 to SB_Slave;
SB_Slave: label L9; in USERDEF.SBSetServerAvailableNotification,5 from Client;
SB_Slave: label L10; out USERDEF.Result_SBSetServerAvailableNotification,6(NotificationID='ID_1') to Client;
Client: label L11; in USERDEF.Result_SBSetServerAvailableNotification,6(NotificationID='ID_1') from SB_Slave;
SB_Slave: endconcurrent;
Server: label L12; out USERDEF.SBRegisterInterface,7(Name=_) to SB_Master;
SB_Master: label L13; in USERDEF.SBRegisterInterface,7(Name=_) from Server;
SB_Master: label L14; out USERDEF.write,8(NotificationID=_) to SB_Slave;
SB_Slave: label L15; in USERDEF.write,8(NotificationID=_) from SB_Master;
SB_Slave: label L16; out USERDEF.getServerInformation,9 to SB_Master;
SB_Master: label L17; in USERDEF.getServerInformation,9 from SB_Slave;
SB_Master: label L18; out USERDEF.Result_getServerInformation,10 to SB_Slave;
SB_Slave: label L19; in USERDEF.Result_getServerInformation,10 from SB_Master;
SB_Slave: label L20; out USERDEF.write,11(NotificationID='ID_1') to Client;
Client: label L21; in USERDEF.write,11(NotificationID='ID_1') from SB_Slave;
Client: label L22; out USERDEF.SBAttachInterface,12(Name=_) to SB_Slave;
SB_Slave: label L23; in USERDEF.SBAttachInterface,12(Name=_) from Client;
SB_Slave: label L24; out USERDEF.Result_SBAttachInterface,13(SConnectionInfo=_) to Client;
Client: label L25; in USERDEF.Result_SBAttachInterface,13(SConnectionInfo=_) from SB_Slave;
Client: label L26; out USERDEF.DSIConnectRequest,14(SConnectionInfo=_) to Server;
Server: label L27; in USERDEF.DSIConnectRequest,14(SConnectionInfo=_) from Client;
Client: label L28; out USERDEF.SBSetServerDisconnectNotification,15 to SB_Slave;
SB_Slave: label L29; in USERDEF.SBSetServerDisconnectNotification,15 from Client;
SB_Slave: label L30; out USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID='ID_2') to Client;
Client: label L31; in USERDEF.Result_SBSetServerDisconnectNotification,16(NotificationID='ID_2') from SB_Slave;
SB_Master: concurrent;
SB_Slave: label L32; out USERDEF.SBSetServerDisconnectNotification,17 to SB_Master;
SB_Master: label L33; in USERDEF.SBSetServerDisconnectNotification,17 from SB_Slave;
SB_Master: label L34; out USERDEF.Result_SBSetServerDisconnectNotification,18(NotificationID=_) to SB_Slave;
SB_Slave: label L35; in USERDEF.Result_SBSetServerDisconnectNotification,18(NotificationID=_) from SB_Master;
Server: label L36; out USERDEF.SBSetClientDetachNotification,19 to SB_Master;
SB_Master: label L37; in USERDEF.SBSetClientDetachNotification,19 from Server;
SB_Master: label L38; out USERDEF.Result_SBSetClientDetachNotification,20(NotificationID=_) to Server;
Server: label L39; in USERDEF.Result_SBSetClientDetachNotification,20(NotificationID=_) from SB_Master;
SB_Master: endconcurrent;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Extended_ATTACH_Cache_Fault_No_Server comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Client: label L0; out USERDEF.attachExtendedInterface,1(Name=_, from_SB='false') to SB_Slave;
SB_Slave: label L1; in USERDEF.attachExtendedInterface,1(Name=_, from_SB='false') from Client;
SB_Slave: label L2; out USERDEF.Result_attachExtendedInterface,2(Error=_, NotificationID='ID_1') to Client;
Client: label L3; in USERDEF.Result_attachExtendedInterface,2(Error=_, NotificationID='ID_1') from SB_Slave;
SB_Slave: label L4; out USERDEF.attachExtendedInterface,3(Name=_, from_SB='true') to SB_Master;
SB_Master: label L5; in USERDEF.attachExtendedInterface,3(Name=_, from_SB='true') from SB_Slave;
SB_Master: label L6; out USERDEF.Result_attachExtendedInterface,4(Error=_, NotificationID=_) to SB_Slave;
SB_Slave: label L7; in USERDEF.Result_attachExtendedInterface,4(Error=_, NotificationID=_) from SB_Master;
Server: label L8; out USERDEF.SBRegisterInterface,5(Name=_) to SB_Master;
SB_Master: label L9; in USERDEF.SBRegisterInterface,5(Name=_) from Server;
SB_Master: label L10; out USERDEF.write,6(NotificationID=_) to SB_Slave;
SB_Slave: label L11; in USERDEF.write,6(NotificationID=_) from SB_Master;
SB_Slave: label L12; out USERDEF.attachExtendedInterface,7(Name=_, from_SB='true') to SB_Master;
SB_Master: label L13; in USERDEF.attachExtendedInterface,7(Name=_, from_SB='true') from SB_Slave;
SB_Master: label L14; out USERDEF.Result_attachExtendedInterface,8(Error=_, NotificationID=_) to SB_Slave;
SB_Slave: label L15; in USERDEF.Result_attachExtendedInterface,8(Error=_, NotificationID=_) from SB_Master;
SB_Slave: label L16; out USERDEF.write,9(NotificationID='ID_1') to Client;
Client: label L17; in USERDEF.write,9(NotificationID='ID_1') from SB_Slave;
Client: label L18; out USERDEF.attachExtendedInterface,10(Name=_, from_SB='false') to SB_Slave;
SB_Slave: label L19; in USERDEF.attachExtendedInterface,10(Name=_, from_SB='false') from Client;
SB_Slave: label L20; out USERDEF.Result_attachExtendedInterface,11(SConnectionInfo=_, NotificationID='ID_2') to Client;
Client: label L21; in USERDEF.Result_attachExtendedInterface,11(SConnectionInfo=_, NotificationID='ID_2') from SB_Slave;
Client: label L22; out USERDEF.DSIConnectRequest,12(SConnectionInfo=_) to Server;
Server: label L23; in USERDEF.DSIConnectRequest,12(SConnectionInfo=_) from Client;
Server: label L24; out USERDEF.SBSetClientDetachNotification,13 to SB_Master;
SB_Master: label L25; in USERDEF.SBSetClientDetachNotification,13 from Server;
SB_Master: label L26; out USERDEF.Result_SBSetClientDetachNotification,14(NotificationID=_) to Server;
Server: label L27; in USERDEF.Result_SBSetClientDetachNotification,14(NotificationID=_) from SB_Master;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Extended_ATTACH_Cache_Fault_Server_1 comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.attachExtendedInterface,2(Name=_, from_SB='false') to SB_Slave;
SB_Slave: label L3; in USERDEF.attachExtendedInterface,2(Name=_, from_SB='false') from Client;
SB_Slave: label L4; out USERDEF.Result_attachExtendedInterface,3(Error=_, NotificationID='ID_1') to Client;
Client: label L5; in USERDEF.Result_attachExtendedInterface,3(Error=_, NotificationID='ID_1') from SB_Slave;
SB_Slave: label L6; out USERDEF.attachExtendedInterface,4(Name=_, from_SB='true') to SB_Master;
SB_Master: label L7; in USERDEF.attachExtendedInterface,4(Name=_, from_SB='true') from SB_Slave;
SB_Master: label L8; out USERDEF.Result_attachExtendedInterface,5(SConnectionInfo=_, NotificationID=_) to SB_Slave;
SB_Slave: label L9; in USERDEF.Result_attachExtendedInterface,5(SConnectionInfo=_, NotificationID=_) from SB_Master;
SB_Slave: label L10; out USERDEF.write,6(NotificationID='ID_1') to Client;
Client: label L11; in USERDEF.write,6(NotificationID='ID_1') from SB_Slave;
Client: label L12; out USERDEF.attachExtendedInterface,7(Name=_, from_SB='false') to SB_Slave;
SB_Slave: label L13; in USERDEF.attachExtendedInterface,7(Name=_, from_SB='false') from Client;
SB_Slave: label L14; out USERDEF.Result_attachExtendedInterface,8(SConnectionInfo=_, NotificationID='ID_2') to Client;
Client: label L15; in USERDEF.Result_attachExtendedInterface,8(SConnectionInfo=_, NotificationID='ID_2') from SB_Slave;
Client: label L16; out USERDEF.DSIConnectRequest,9(SConnectionInfo=_) to Server;
Server: label L17; in USERDEF.DSIConnectRequest,9(SConnectionInfo=_) from Client;
Server: label L18; out USERDEF.SBSetClientDetachNotification,10 to SB_Master;
SB_Master: label L19; in USERDEF.SBSetClientDetachNotification,10 from Server;
SB_Master: label L20; out USERDEF.Result_SBSetClientDetachNotification,11(NotificationID=_) to Server;
Server: label L21; in USERDEF.Result_SBSetClientDetachNotification,11(NotificationID=_) from SB_Master;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

msc Extended_ATTACH_Cache_Fault_Server_2 comment 'The server is not available when the ATTACH command is sent.'/* Alignment: Left */;
Client: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Slave: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
SB_Master: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: instance /*FBlockName: '', InstanceId: '', InstanceDevice: '', MostCatalogAlias: 'USERDEF', ExtensionCatalogAlias: ''*/;
Server: label L0; out USERDEF.SBRegisterInterface,1(Name=_) to SB_Master;
SB_Master: label L1; in USERDEF.SBRegisterInterface,1(Name=_) from Server;
Client: label L2; out USERDEF.attachExtendedInterface,2(Name=_, from_SB='false') to SB_Slave;
SB_Slave: label L3; in USERDEF.attachExtendedInterface,2(Name=_, from_SB='false') from Client;
SB_Slave: label L4; out USERDEF.attachExtendedInterface,3(Name=_, from_SB='true') to SB_Master;
SB_Master: label L5; in USERDEF.attachExtendedInterface,3(Name=_, from_SB='true') from SB_Slave;
SB_Master: label L6; out USERDEF.Result_attachExtendedInterface,4(SConnectionInfo=_, NotificationID=_) to SB_Slave;
SB_Slave: label L7; in USERDEF.Result_attachExtendedInterface,4(SConnectionInfo=_, NotificationID=_) from SB_Master;
SB_Slave: label L8; out USERDEF.Result_attachExtendedInterface,5(SConnectionInfo=_, NotificationID=_) to Client;
Client: label L9; in USERDEF.Result_attachExtendedInterface,5(SConnectionInfo=_, NotificationID=_) from SB_Slave;
Client: label L10; out USERDEF.DSIConnectRequest,6(SConnectionInfo=_) to Server;
Server: label L11; in USERDEF.DSIConnectRequest,6(SConnectionInfo=_) from Client;
Server: label L12; out USERDEF.SBSetClientDetachNotification,7 to SB_Master;
SB_Master: label L13; in USERDEF.SBSetClientDetachNotification,7 from Server;
SB_Master: label L14; out USERDEF.Result_SBSetClientDetachNotification,8(NotificationID=_) to Server;
Server: label L15; in USERDEF.Result_SBSetClientDetachNotification,8(NotificationID=_) from SB_Master;
Client: endinstance;
SB_Slave: endinstance;
SB_Master: endinstance;
Server: endinstance;
endmsc;

